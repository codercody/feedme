generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model casts {
  id                 BigInt    @id @default(autoincrement())
  created_at         DateTime  @default(now()) @db.Timestamp(6)
  updated_at         DateTime  @default(now()) @db.Timestamp(6)
  deleted_at         DateTime? @db.Timestamp(6)
  timestamp          DateTime  @db.Timestamp(6)
  fid                BigInt
  hash               Bytes     @unique(map: "casts_hash_unique")
  parent_hash        Bytes?
  parent_fid         BigInt?
  parent_url         String?
  text               String
  embeds             Json      @default("{}")
  mentions           BigInt[]  @default([])
  mentions_positions Int[]     @default([]) @db.SmallInt
  root_parent_hash   Bytes?
  root_parent_url    String?
  messages           messages  @relation(fields: [hash], references: [hash], onDelete: NoAction, onUpdate: NoAction, map: "casts_hash_foreign")

  @@index([fid, timestamp], map: "casts_fid_timestamp_index")
  @@index([timestamp], map: "casts_timestamp_index")
  @@index([parent_hash], map: "idx_parent_hash")
  @@index([root_parent_hash], map: "root_parent_hash_idx")
}

model fids {
  fid             BigInt   @id
  created_at      DateTime @default(now()) @db.Timestamp(6)
  updated_at      DateTime @default(now()) @db.Timestamp(6)
  custody_address Bytes
}

model fnames {
  fname           String    @id
  created_at      DateTime  @default(now()) @db.Timestamp(6)
  updated_at      DateTime  @default(now()) @db.Timestamp(6)
  custody_address Bytes?
  expires_at      DateTime? @db.Timestamp(6)
  fid             BigInt?
  deleted_at      DateTime? @db.Timestamp(6)
}

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model hub_subscriptions {
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model kysely_migration {
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model kysely_migration_lock {
// }

model links {
  id                BigInt    @id @default(autoincrement())
  fid               BigInt?
  target_fid        BigInt?
  hash              Bytes     @unique(map: "links_hash_unique")
  timestamp         DateTime  @db.Timestamp(6)
  created_at        DateTime  @default(now()) @db.Timestamp(6)
  updated_at        DateTime  @default(now()) @db.Timestamp(6)
  deleted_at        DateTime? @db.Timestamp(6)
  type              String?
  display_timestamp DateTime? @db.Timestamp(6)

  @@unique([fid, target_fid, type], map: "links_fid_target_fid_type_unique")
}

model messages {
  id               BigInt         @id @default(autoincrement())
  created_at       DateTime       @default(now()) @db.Timestamp(6)
  updated_at       DateTime       @default(now()) @db.Timestamp(6)
  deleted_at       DateTime?      @db.Timestamp(6)
  pruned_at        DateTime?      @db.Timestamp(6)
  revoked_at       DateTime?      @db.Timestamp(6)
  timestamp        DateTime       @db.Timestamp(6)
  message_type     Int            @db.SmallInt
  fid              BigInt
  hash             Bytes          @unique(map: "messages_hash_unique")
  hash_scheme      Int            @db.SmallInt
  signature        Bytes
  signature_scheme Int            @db.SmallInt
  signer           Bytes
  raw              Bytes
  casts            casts?
  reactions        reactions?
  user_data        user_data?
  verifications    verifications?

  @@index([timestamp], map: "messages_timestamp_index")
}

model reactions {
  id            BigInt    @id @default(autoincrement())
  created_at    DateTime  @default(now()) @db.Timestamp(6)
  updated_at    DateTime  @default(now()) @db.Timestamp(6)
  deleted_at    DateTime? @db.Timestamp(6)
  timestamp     DateTime  @db.Timestamp(6)
  reaction_type Int       @db.SmallInt
  fid           BigInt
  hash          Bytes     @unique(map: "reactions_hash_unique")
  target_hash   Bytes?
  target_fid    BigInt?
  target_url    String?
  messages      messages  @relation(fields: [hash], references: [hash], onDelete: NoAction, onUpdate: NoAction, map: "reactions_hash_foreign")

  @@index([target_fid, timestamp], map: "idx_reactions_target_fid_timestamp")
  @@index([target_hash, deleted_at, timestamp(sort: Desc)], map: "idx_reactions_target_hash_deleted_at_timestamp")
  @@index([fid, timestamp], map: "reactions_fid_timestamp_index")
  @@index([timestamp], map: "timestamp_idx")
}

model signers {
  id              BigInt    @id @default(autoincrement())
  created_at      DateTime  @default(now()) @db.Timestamp(6)
  updated_at      DateTime  @default(now()) @db.Timestamp(6)
  deleted_at      DateTime? @db.Timestamp(6)
  timestamp       DateTime  @db.Timestamp(6)
  fid             BigInt
  hash            Bytes?
  custody_address Bytes?
  signer          Bytes
  name            String?

  @@unique([timestamp, fid, signer], map: "unique_timestamp_fid_signer")
  @@index([fid, timestamp], map: "signers_fid_timestamp_index")
}

model storage {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime  @default(now()) @db.Timestamp(6)
  updated_at DateTime  @default(now()) @db.Timestamp(6)
  deleted_at DateTime? @db.Timestamp(6)
  timestamp  DateTime  @db.Timestamp(6)
  fid        BigInt
  units      BigInt
  expiry     DateTime  @db.Timestamp(6)

  @@unique([fid, units, expiry], map: "unique_fid_units_expiry")
}

model user_data {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime  @default(now()) @db.Timestamp(6)
  updated_at DateTime  @default(now()) @db.Timestamp(6)
  deleted_at DateTime? @db.Timestamp(6)
  timestamp  DateTime  @db.Timestamp(6)
  fid        BigInt
  hash       Bytes     @unique(map: "user_data_hash_unique")
  type       Int       @db.SmallInt
  value      String
  messages   messages  @relation(fields: [hash], references: [hash], onDelete: NoAction, onUpdate: NoAction, map: "user_data_hash_foreign")

  @@unique([fid, type], map: "user_data_fid_type_unique")
  @@index([fid, type], map: "idx_user_data_fid_type")
  @@index([fid], map: "user_data_fid_index")
}

/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model verifications {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime  @default(now()) @db.Timestamp(6)
  updated_at DateTime  @default(now()) @db.Timestamp(6)
  deleted_at DateTime? @db.Timestamp(6)
  timestamp  DateTime  @db.Timestamp(6)
  fid        BigInt
  hash       Bytes     @unique(map: "verifications_hash_unique")
  claim      Json
  messages   messages  @relation(fields: [hash], references: [hash], onDelete: NoAction, onUpdate: NoAction, map: "verifications_hash_foreign")

  @@index([fid, timestamp], map: "verifications_fid_timestamp_index")
}
